import { AngularServeOptions, CommandLineInputs, CommandLineOptions, CommandMetadata, ServeDetails } from '../../../definitions';
import { ServeRunner, ServeRunnerDeps } from '../../serve';
import { AngularProject } from './';
export interface AngularServeRunnerDeps extends ServeRunnerDeps {
    readonly project: AngularProject;
}
export declare class AngularServeRunner extends ServeRunner<AngularServeOptions> {
    protected readonly e: AngularServeRunnerDeps;
    constructor(e: AngularServeRunnerDeps);
    getCommandMetadata(): Promise<Partial<CommandMetadata>>;
    createOptionsFromCommandLine(inputs: CommandLineInputs, options: CommandLineOptions): AngularServeOptions;
    platformToMode(platform: string): string;
    modifyOpenURL(url: string, options: AngularServeOptions): string;
    serveProject(options: AngularServeOptions): Promise<ServeDetails>;
    private serveCommandWrapper;
    private servecmd;
    serveOptionsToNgArgs(options: AngularServeOptions): Promise<string[]>;
    buildArchitectCommand(options: AngularServeOptions): string[];
}
